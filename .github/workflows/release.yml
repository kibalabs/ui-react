name: Release
on:
  push:
    tags: ["v*"]
jobs:
  deploy-package:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Build docker image
        run: docker build --tag package .
      - name: Create .npmrc file
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - name: Publish package to npm
        run: docker run -v $(pwd)/.npmrc:/root/.npmrc package npm publish
  deploy-docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    env:
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}-docs:latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to GitHub container registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Build docker image
        run: docker build --tag $DOCKER_IMAGE .
      - name: Push to container registry
        run: docker push $DOCKER_IMAGE
  run-docs:
    needs: deploy-docs
    runs-on: ubuntu-latest
    env:
      NAME: ui-react-docs
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}-docs:latest
    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.FREEBOX_URL }}
          username: ${{ secrets.FREEBOX_USER }}
          key: ${{ secrets.FREEBOX_SSH_KEY }}
          envs: DOCKER_IMAGE,NAME
          script_stop: true
          script: |
            url="ui-react-docs.kibalabs.com"
            varsFile=~/.${NAME}.vars
            docker pull ${DOCKER_IMAGE}
            docker stop ${NAME} && docker rm ${NAME} || true
            docker run \
                --name ${NAME} \
                --detach \
                --publish-all \
                --restart on-failure \
                --env NAME=${NAME} \
                --env VIRTUAL_HOST=${url} \
                --env LETSENCRYPT_HOST=${url} \
                --env-file ${varsFile} \
                ${DOCKER_IMAGE}
  create-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
